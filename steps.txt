FULL APPLICATION CREATION STEPS
---------------------------------
(project created with laravel 9.6.0, php 8.1.1, mysql 5.7.31)

-to install the latest version of laravel, make sure your pc(your terminal) is set up to use the php version required by the latest version of laravel(otherwise you will not get the latest version of laravel)
-install laravel using composer, run "composer create-project laravel/laravel myAppName"

-the .env config file can't be commited, we can't store credentials in our code(for obvious security reasons). But for the purpose of this app, i'll store all configuration in .env.example, so that when i run the "cp .env.example .env" step from the installation INSTRUCTIONS(from Readme.md), it'll copy all configuration to .env

-there's no fancy laravel command to create a database - so use phpmyadmin or whatever you want to create a database with the configuration found in .env.example (i had to go to https://wampserver.aviatechno.net/?lang=en and update my phpmyadmin for this)
-create the migration files that create the tables, run:
    -php artisan make:migration create_companies_table
    -php artisan make:migration create_employees_table
    (then modify these files to the table structure you want, obviously)
-create database seeder (laraCRM\database\seeders\DatabaseSeeder.php)
-populate database by running the migrations and the seeds: php artisan migrate --seed 

-install Laravel Breeze(https://laravel.com/docs/9.x/starter-kits#laravel-breeze . git commit after each step, to see exactly what it did): 
    (
        -i used Laravel Breeze since "Laravel make:auth" is was for Laravel 5, this app is done with Laravel 9
    )
    -composer require laravel/breeze --dev
    -php artisan breeze:install
    (
    -then i had to update my system for the next steps(cuz initially i ran the next command(npm install) and i realized i had to do this, my nodejs was outdated, etc):
        -i updated my node.js(downloaded and ran the windows installer from https://nodejs.org/en/)
        -i googled "how to install npm", went here https://docs.npmjs.com/downloading-and-installing-node-js-and-npm and installed the latest version of npm running "npm install -g npm" in cmd
    )
    -npm install (https://www.stackchief.com/tutorials/npm%20install%20%7C%20how%20it%20works)
    -npm run dev (https://laracasts.com/discuss/channels/javascript/what-is-the-difference-between-npm-run-dev-and-npm-run-production)

-create the model, controller with model resource type-hints, and form requests files for validation:
    -php artisan make:model Employee --controller --resource --requests
    -php artisan make:model Company --controller --resource --requests
    (
        p.s. the same could be accomplished by running the following:
            -php artisan make:model Employee
            -php artisan make:controller EmployeeController --model=Employee --resource --requests
            (and same for Company)
    )
[
    -set the table name for the Company model, as laravel would automatically use Companys and that's not correct(https://laravel.com/docs/9.x/eloquent#table-names)
        -comeback: not required. Laravel has this covered by default.
]

-add the resource routes for EmployeeController and CompanyController by adding the following 2 lines to routes\web.php:
    -"Route::resource('employees', EmployeeController::class);"
    -"Route::resource('companies', CompanyController::class);"
    (
        https://laravel.com/docs/9.x/controllers#resource-controllers
        see the added routes: https://laravel.com/docs/9.x/controllers#actions-handled-by-resource-controller (or "php artisan route:list")
    )

-generate database factories for employees and companies(so i have some data to play with), run:
    -php artisan make:factory CompanyFactory
    -php artisan make:factory EmployeeFactory
-write the factories code(since the commands above create empty factories, obviously)
-define one-to-many and many-to-one relationships between the Employee and Company models, necessary for database seeding using EmployeeFactory and CompanyFactory, for queries, etc
-add the seeding of companies and employees to database\seeders\DatabaseSeeder.php, using the newly created factories

-created homepage(view file, added the route to it, added some custom css)
-disabled registration(commented the GET and POST 'register' routes in routes\auth.php)




-to run the app navigate to the project folder and run "php artisan serve"